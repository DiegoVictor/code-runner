Resources:
  PipelineUser:
    Type: AWS::IAM::User
    Properties:
      UserName: coderunner-pipeline-user
      Policies:
        - PolicyName: AssumeRole
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'sts:AssumeRole'
                Resource: '*'

  PipelineUserAccessKey:
    Type: AWS::IAM::AccessKey
    Properties:
      Serial: 1
      Status: Active
      UserName: !Ref PipelineUser

  PipelineUserSecretKey:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub 'pipeline-user/access-keys'
      Description: !Sub 'Access keys for pipeline user'
      SecretString: !Sub '{"aws_access_key_id": "${PipelineUserAccessKey}", "aws_secret_access_key": "${PipelineUserAccessKey.SecretAccessKey}"}'

  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: coderunner-pipeline-role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !GetAtt PipelineUser.Arn
            Action:
              - 'sts:AssumeRole'
              - 'sts:TagSession'

  PipelineRolePermissionPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: coderunner-pipeline-role-policy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - 'cloudformation:CreateChangeSet'
              - 'cloudformation:DescribeChangeSet'
              - 'cloudformation:DescribeStackEvents'
              - 'cloudformation:DescribeStacks'
              - 'cloudformation:ExecuteChangeSet'
              - 'cloudformation:GetTemplateSummary'
              - 'ecr:BatchCheckLayerAvailability'
              - 'ecr:BatchDeleteImage'
              - 'ecr:CreateRepository'
              - 'ecr:CompleteLayerUpload'
              - 'ecr:DeleteRepository'
              - 'ecr:DescribeRepositories'
              - 'ecr:DescribeImages'
              - 'ecr:GetAuthorizationToken'
              - 'ecr:GetLifecyclePolicy'
              - 'ecr:InitiateLayerUpload'
              - 'ecr:ListTagsForResource'
              - 'ecr:PutImage'
              - 'ecr:PutImageScanningConfiguration'
              - 'ecr:SetRepositoryPolicy'
              - 'ecr:UploadLayerPart'
              - 'iam:AttachRolePolicy'
              - 'iam:CreateRole'
              - 'iam:DetachRolePolicy'
              - 'iam:DeleteRole'
              - 'iam:GetRole'
              - 'iam:PassRole'
              - 'iam:TagRole'
              - 'lambda:CreateFunction'
              - 'lambda:DeleteFunction'
              - 'lambda:TagResource'
              - 'rds:CreateDBCluster'
              - 'rds:CreateDBInstance'
              - 'rds:DeleteDBInstance'
              - 'rds:DescribeDBClusters'
              - 'rds:DescribeDBInstances'
              - 'rds:ModifyDBCluster'
              - 'secretsmanager:CreateSecret'
              - 'secretsmanager:DeleteSecret'
              - 'secretsmanager:GetRandomPassword'
              - 'secretsmanager:GetSecretValue'
              - 'secretsmanager:UpdateSecret'
              - 's3:CreateBucket'
              - 's3:DeleteBucket'
            Resource: '*'
      Roles:
        - !Ref PipelineRole

  CloudFormationRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: coderunner-cloudformation-role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action:
              - 'sts:AssumeRole'
          - Effect: Allow
            Principal:
              Service: 'lambda.amazonaws.com'
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: GrantCloudFormationFullAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: '*'
                Resource: '*'
