{
  "openapi": "3.0.3",
  "info": {
    "title": "Code Runner",
    "version": "1.0",
    "license": {
      "name": "MIT",
      "url": "https://raw.githubusercontent.com/DiegoVictor/code-runner/refs/heads/main/LICENSE"
    }
  },
  "servers": [
    {
      "url": "http://localhost:5000"
    }
  ],
  "paths": {
    "/challenges": {
      "get": {
        "tags": [
          "Challenges"
        ],
        "parameters": [
          {
            "name": "cursorId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return challenges paginated",
            "headers": {
              "X-Total-Count": {
                "description": "Total number of challenges",
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Challenge"
                      }
                    },
                    "cursorId": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "total": {
                      "type": "integer"
                    }
                  }
                },
                "example": {
                  "data": [
                    {
                      "id": "16d71cd6-eb1e-4f47-9d12-a8175553186a",
                      "title": "Forming a Magic Square",
                      "description": "Given a `3 x 3` matrix, convert it into a magic square at minimal cost.",
                      "createdAt": "2025-02-22T14:44:38.455Z",
                      "updatedAt": "2025-02-22T14:44:38.455Z"
                    },
                    {
                      "id": "bc4bfdd8-e7d5-42e3-a0ca-7d3b04fa34eb",
                      "title": "Caesar Cipher",
                      "description": "A simple Caesar cipher that shifts the characters of a string by a fixed number of positions down the alphabet.",
                      "createdAt": "2025-02-22T14:44:38.455Z",
                      "updatedAt": "2025-02-22T14:44:38.455Z"
                    }
                  ],
                  "cursorId": "bc4bfdd8-e7d5-42e3-a0ca-7d3b04fa34eb",
                  "total": 2
                }
              }
            }
          },
          "400": {
            "description": "Validation Failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                },
                "example": {
                  "message": "Validation Error",
                  "error": [
                    {
                      "code": "too_small",
                      "message": "Number must be greater than 0",
                      "path": [
                        "limit"
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Challenges"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Challenge",
                "properties": {
                  "title": {
                    "type": "string",
                    "minLength": 3
                  },
                  "description": {
                    "type": "string",
                    "minLength": 10
                  },
                  "instructions": {
                    "type": "string",
                    "minLength": 1
                  },
                  "languages": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "js",
                        "ts",
                        "python",
                        "go"
                      ]
                    }
                  },
                  "inputs": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "cuid"
                        },
                        "value": {
                          "type": "object",
                          "properties": {
                            "input": {}
                          }
                        },
                        "expected": {}
                      }
                    }
                  }
                },
                "required": [
                  "title",
                  "description",
                  "instructions",
                  "languages",
                  "inputs"
                ]
              },
              "example": {
                "title": "Square It Up!",
                "description": "Create a function that takes a single integer and returns its square. This challenge will test your ability to perform basic math operations and return statements.",
                "instructions": "1. Input: You'll receive a single integer as input.\n2. Output: Return the square of the input integer (the integer multiplied by itself).\n 3. Example: If the input is 5, the output should be 25.\n\nGive it a try and square it up!",
                "languages": [
                  "js",
                  "ts",
                  "python",
                  "go"
                ],
                "inputs": [
                  {
                    "id": "clwm7ealm000008ky9raxasvv",
                    "value": {
                      "input": 5
                    },
                    "expected": 25
                  },
                  {
                    "id": "clwm7eoyf000108ky2gmpa65o",
                    "value": {
                      "input": 12
                    },
                    "expected": 144
                  },
                  {
                    "id": "clwm7f482000308kyg437fhmq",
                    "value": {
                      "input": 25
                    },
                    "expected": 625
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Challenge created."
          },
          "400": {
            "description": "Validation Failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                },
                "example": {
                  "message": "Validation Error",
                  "error": [
                    {
                      "code": "invalid_type",
                      "expected": "string",
                      "received": "undefined",
                      "path": [
                        "title"
                      ],
                      "message": "Required"
                    },
                    {
                      "code": "invalid_type",
                      "expected": "string",
                      "received": "undefined",
                      "path": [
                        "description"
                      ],
                      "message": "Required"
                    },
                    {
                      "code": "invalid_type",
                      "expected": "string",
                      "received": "undefined",
                      "path": [
                        "instructions"
                      ],
                      "message": "Required"
                    },
                    {
                      "code": "invalid_type",
                      "expected": "array",
                      "received": "undefined",
                      "path": [
                        "languages"
                      ],
                      "message": "Required"
                    },
                    {
                      "code": "invalid_type",
                      "expected": "array",
                      "received": "undefined",
                      "path": [
                        "inputs"
                      ],
                      "message": "Required"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
  },
  "components": {
    "schemas": {
      "Challenge": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ValidationError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "error": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "path": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
    },
    "parameters": {
      "id": {
        "name": "id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "responses": {
      "NotFound": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "error": "Not Found"
            }
          }
        }
      }
    }
  }
}
